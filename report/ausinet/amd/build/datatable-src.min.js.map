{"version":3,"sources":["../src/datatable-src.js"],"names":["$","DataTable","table","opts","options","currentPage","currentStart","filterIndex","addClass","nbColumns","find","first","length","pagingDivSelector","pagingDivClass","ul","pagingListClass","html","append","dataTable","head","parent","prepend","insertAfter","jQuery","isArray","data","isPlainObject","size","parseInt","refresh","loadingDivSelector","i","pageSize","pagingNumberOfPages","getAjaxDataAsync","getAjaxDataSync","each","line","push","createSort","createFilter","triggerSort","filter","prototype","constructor","clearAjaxLoading","refreshTimeOut","setTimeout","datatable","hideLoadingDivs","getLoadingDivs","remove","updateLoadingDivs","css","start","ajax","url","type","offset","limit","ajaxI","ajaxThis","success","concat","sort","error","_jqxhr","text","console","log","allInOne","syncData","ajaxAllInOne","jqhxr","getHead","getBody","getCounter","counterDivSelector","getPagingLists","getLastPageNumber","Math","ceil","updatePaging","nbPages","cp","lp","end","firstPage","prevPage","nextPage","lastPage","on","hasClass","page","loadPage","updateCounter","last","counterText","getSortFunction","isFunction","sortKey","key","asc","sortDir","a","b","vala","valb","destroyFilter","changePlaceHolder","placeholder","filterText","attr","createTextFilter","field","input","filterVals","typewatch","timer","callback","ms","clearTimeout","val","toUpperCase","addFilter","indexOf","filterInputClass","createSelectFilter","values","selected","multiple","empty","emptyValue","filters","getFilterOptions","default","k","Object","keys","select","allKeys","optgroup","skey","hasOwnProperty","change","aKeys","filterSelectClass","tr","td","keepCurrentPage","oldCurrentStart","checkFilter","ok","fk","destroySort","removeClass","unbind","removeData","countTH","th","fnSort","identify","id","index","row","addRow","deleteRow","splice","updateRow","oldPage","onChange","getCurrentPage","beforeRefresh","currentDataLength","lineFormat","afterRefresh","setOption","setOptions","destroy","fn","args","arguments","ret","extend","defaults","totalPage","firstRow","lastRow","totalRow","res","window"],"mappings":"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","sourcesContent":["(function ($) {\r\n\r\n    \"use strict\" ;\r\n\r\n    var DataTable = function (table, opts) {\r\n\r\n        this.options = opts ;\r\n        this.table = table ;\r\n        this.currentPage = 0 ; \r\n        this.currentStart = 0 ; // different from currentPage * pageSize because there is a filter\r\n        this.filterIndex = [] ;\r\n        \r\n        this.table.addClass('datatable') ;\r\n        \r\n        /* If nb columns not specified, count the nunber of column from thead. */\r\n        if (this.options.nbColumns < 0) {\r\n            this.options.nbColumns = this.table.find('thead tr').first().find('th').length ;\r\n        }\r\n        \r\n        /* Create the base for pagination. */\r\n        $(this.options.pagingDivSelector)\r\n            .addClass('pagination-data-tables')\r\n            .addClass(this.options.pagingDivClass) ;\r\n        var ul = $('<ul></ul>') ;\r\n        ul.addClass(this.options.pagingListClass) ;\r\n        $(this.options.pagingDivSelector)\r\n            .html('')\r\n            .append(ul) ;\r\n        \r\n        /* DATA ! */\r\n        \r\n        var dataTable = this ;\r\n        \r\n        if (this.table.find('thead').length === 0) {\r\n            var head = $('<thead></thead>') ;\r\n            head.append(this.table.find('th').parent('tr')) ;\r\n            this.table.prepend(head) ;\r\n        }\r\n        \r\n        if (this.table.find('tbody').length === 0) {\r\n            $('<tbody></tbody>').insertAfter(this.table.find('thead').first()) ;\r\n        }\r\n        \r\n        if (jQuery.isArray(this.options.data)) {\r\n            this.data = this.options.data ;\r\n        }\r\n        else if (jQuery.isPlainObject(this.options.data)) {\r\n            if (this.table.data('size')) {\r\n                this.options.data.size = parseInt(this.table.data('size'), 10) ;    \r\n            }\r\n            if (this.options.data.refresh === undefined) {\r\n                this.options.data.refresh = false ;\r\n            }\r\n            this.data = [] ;\r\n            if (this.options.data.size !== undefined) {\r\n                $(this.options.loadingDivSelector).html('<div class=\"progress progress-striped active datatable-load-bar\"><div class=\"bar\" style=\"width: 0%;\"></div></div>') ;\r\n                for (var i=0 ; i < this.options.data.size; i += this.options.pageSize * this.options.pagingNumberOfPages ) {\r\n                    this.getAjaxDataAsync (i) ;\r\n                }\r\n            }\r\n            else {\r\n                $(this.options.loadingDivSelector).html('<div class=\"progress progress-striped active datatable-load-bar\"><div class=\"bar\" style=\"width: 100%;\"></div></div>') ;\r\n                this.getAjaxDataSync () ;\r\n            }\r\n        }\r\n        else {\r\n            this.data = [] ;\r\n            this.table.find('tbody tr').each(function () {\r\n                var line = [] ;\r\n                $(this).find('td').each(function () { line.push($(this).html()) ; }) ;\r\n                dataTable.data.push(line) ;\r\n            }) ;\r\n        }\r\n        \r\n        /* Add sorting class to all th and add callback. */\r\n        this.createSort () ;\r\n        \r\n        /* Add filter where it's needed. */\r\n        this.createFilter () ;\r\n        \r\n        /* If a sort key is specified, sort. */\r\n        this.triggerSort () ;\r\n        \r\n        /* Then filter (and refresh) ! */\r\n        this.filter () ;\r\n        \r\n    } ;\r\n    \r\n    DataTable.prototype = {\r\n    \r\n        constructor: DataTable,\r\n        \r\n        /**\r\n         * \r\n         * Clear size option and set timeout (if specified) for refresh.\r\n         * \r\n         * Note: This function should be call when a ajax loading is finished.\r\n         * \r\n         * @update refreshTimeOut The new timeout\r\n         *         \r\n        **/\r\n        clearAjaxLoading: function () {\r\n            if (this.options.data.refresh) {\r\n                this.refreshTimeOut = setTimeout((function (datatable) {\r\n                    return function () { datatable.getAjaxDataSync(0, true) ; } ;\r\n                }) (this), this.options.data.refresh) ;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Hide the loading divs.\r\n         * \r\n        **/\r\n        hideLoadingDivs: function () {\r\n            this.getLoadingDivs().remove() ;\r\n        },\r\n    \r\n    \r\n        /**\r\n         * \r\n         * Update the loading divs with the current % of data load (according to this.options.data.size).\r\n         * \r\n         * Note: Call clearAjaxLoading & hideLoadingDivs if all the data have been loaded.\r\n         *         \r\n        **/\r\n        updateLoadingDivs: function () {\r\n            if (this.data.length === this.options.data.size) {\r\n                this.clearAjaxLoading () ;\r\n                this.hideLoadingDivs () ;\r\n            }\r\n            else {\r\n                this.getLoadingDivs().find('div.progress .bar').css('width', parseInt(100 * this.data.length / this.options.data.size, 10) + '%') ;\r\n            }\r\n        },\r\n                \r\n        /**\r\n         * \r\n         * Get data according to this.options.data, asynchronously, using recursivity.\r\n         * \r\n         * @param start The first offset to send to the server\r\n         * \r\n         * @update data Concat data received from server to old data\r\n         * \r\n         * Note: Each call increment start by pageSize * pagingNumberOfPages.\r\n         *            \r\n        **/\r\n        getAjaxDataAsync: function (start) {\r\n            $.ajax({\r\n                url: this.options.data.url,\r\n                type: this.options.data.type,\r\n                data: {\r\n                    offset: start,\r\n                    limit: this.options.pageSize * this.options.pagingNumberOfPages \r\n                },\r\n                ajaxI: start,\r\n                ajaxThis: this,\r\n                success: function (data, _jqxhr, _text) {\r\n                    this.ajaxThis.data = this.ajaxThis.data.concat(data) ;\r\n                    this.ajaxThis.sort() ;\r\n                    this.ajaxThis.filter (true) ;\r\n                    this.ajaxThis.updateLoadingDivs () ;\r\n                },\r\n                error: function (_jqxhr, text, error) {\r\n                    console.log(\"ERROR: \" + error + \" - \" + text) ;\r\n                    this.ajaxThis.getAjaxDataAsync(this.ajaxI) ;\r\n                }\r\n            }) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Load \"synchronously\" data from server: Each new request is send only after the last\r\n         * one have been received.\r\n         * \r\n         * @param start The first offset to send to the server\r\n         * @param allInOne true if all the real data (this.data) should be updated only at the\r\n         *      end of the load. If not specified or false, the data are refreshed after each request.\r\n         * \r\n         * @update syncData Temporary data used if allInOne is true (Should not be used in another method)\r\n         * @update data Concat data received from server to old data\r\n         * \r\n         * Note: Each call increment start by pageSize * pagingNumberOfPages.\r\n         * \r\n        **/\r\n        getAjaxDataSync: function (start, allInOne) {\r\n            if (typeof start === 'undefined') {\r\n                start = 0 ;\r\n            }\r\n            if (typeof allInOne === 'undefined') {\r\n                allInOne = false ;\r\n            }\r\n            if (allInOne && this.syncData === undefined) {\r\n                this.syncData = [] ;\r\n            }\r\n            // console.log(\"Call data sync : \" + start + \" - \" + allInOne + \" - \" + this.syncData.length) ;\r\n            $.ajax({\r\n                url: this.options.data.url,\r\n                type: this.options.data.type,\r\n                data: {\r\n                    offset: start,\r\n                    limit: this.options.pageSize * this.options.pagingNumberOfPages \r\n                },\r\n                ajaxI: start,\r\n                ajaxAllInOne: allInOne,\r\n                ajaxThis: this,\r\n                success: function (data, text, jqxhr) {\r\n                    if (data.length !== 0) {\r\n                        if (this.ajaxAllInOne) {\r\n                            this.ajaxThis.syncData = this.ajaxThis.syncData.concat(data) ;\r\n                        }\r\n                        else {\r\n                            this.ajaxThis.data = this.ajaxThis.data.concat(data) ;\r\n                            this.ajaxThis.sort() ;\r\n                            this.ajaxThis.filter (true) ;\r\n                        }\r\n                        this.ajaxThis.getAjaxDataSync(this.ajaxI + this.ajaxThis.options.pageSize * this.ajaxThis.options.pagingNumberOfPages,\r\n                                this.ajaxAllInOne) ;\r\n                    }\r\n                    else {\r\n                        if (this.ajaxAllInOne) {\r\n                            // console.log('refresh ok') ;\r\n                            this.ajaxThis.data = this.ajaxThis.syncData ;\r\n                            delete this.ajaxThis.syncData ;\r\n                        }\r\n                        this.ajaxThis.clearAjaxLoading () ;\r\n                        this.ajaxThis.hideLoadingDivs () ;\r\n                        this.ajaxThis.sort() ;\r\n                        this.ajaxThis.filter (true) ;\r\n                    }\r\n                },\r\n                error: function (jqhxr, text, error) {\r\n                    console.log(\"ERROR: \" + error + \" - \" + text) ;\r\n                    this.ajaxThis.getAjaxDataSync(this.ajaxI, this.ajaxAllInOne) ;\r\n                }\r\n            }) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * @return The header of the table\r\n         * \r\n        **/\r\n        getHead: function () {\r\n            return this.table.find('thead').first() ;\r\n        },\r\n            \r\n        /**\r\n         * \r\n         * @return The body of the table\r\n         * \r\n        **/\r\n        getBody: function () {\r\n            return this.table.find('tbody').first() ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * @return The counter divs\r\n         *         \r\n        **/\r\n        getCounter: function () {\r\n            return $(this.options.counterDivSelector) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * @return The loading divs\r\n         * \r\n        **/\r\n        getLoadingDivs: function () {\r\n            return $(this.options.loadingDivSelector) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * @return The paging lists created in the paging divs\r\n         *             \r\n        **/\r\n        getPagingLists: function () {\r\n            return $(this.options.pagingDivSelector).find('ul') ;\r\n        },\r\n            \r\n        /**\r\n         * \r\n         * @return The last page number according to options.pageSize and current number of filtered elements.\r\n         * \r\n        **/\r\n        getLastPageNumber: function () {\r\n            return parseInt(Math.ceil(this.filterIndex.length / this.options.pageSize), 10);\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Update the paging divs. \r\n         * \r\n        **/\r\n        updatePaging: function () {\r\n        \r\n            /* Be carefull if you change something here, all this part calculate the first and last page to display.\r\n            I choose to center the current page, it's more beautiful... */\r\n        \r\n            var nbPages = this.options.pagingNumberOfPages;\r\n            var dataTable = this ;\r\n            var cp = parseInt(this.currentStart / this.options.pageSize, 10) + 1;\r\n            var lp = this.getLastPageNumber () ;\r\n            var start ;\r\n            var end ;\r\n\r\n            if (cp < nbPages/2) { \r\n                start = 1 ; \r\n            }\r\n            else if (cp >= lp - nbPages/2) {\r\n                start = lp - nbPages + 1 ;\r\n                if (start < 1) {\r\n                    start = 1 ;\r\n                }\r\n            }\r\n            else {\r\n                start = parseInt(cp - nbPages/2 + 1, 10) ;\r\n            }\r\n            \r\n            if (start + nbPages < lp + 1) {\r\n                end = start + nbPages - 1;\r\n            }\r\n            else {\r\n                end = lp ;\r\n            }\r\n            \r\n            /* Juste iterate over each paging list and append li to ul. */\r\n        \r\n            this.getPagingLists().each (function () {\r\n                $(this).html('') ;\r\n                if (dataTable.options.firstPage) {\r\n                    $(this).append('<li class=\"' + ((cp === 1) ? 'active' : '') + '\"><a data-page=\"first\">' + dataTable.options.firstPage + '</a></li>') ;\r\n                }\r\n                if (dataTable.options.prevPage) {\r\n                    $(this).append('<li class=\"' + ((cp === 1) ? 'active' : '') + '\"><a data-page=\"prev\">' + dataTable.options.prevPage + '</a></li>') ;\r\n                }\r\n                for (var i = start ; i <= end ; i++) {\r\n                    $(this).append('<li class=\"' + ((i === cp) ? 'active' : '') + '\"><a data-page=\"' + i + '\">' + i + '</a></li>') ;\r\n                }\r\n                if (dataTable.options.nextPage) {\r\n                    $(this).append('<li class=\"' + ((cp === lp || lp === 0) ? 'active' : '') + '\"><a data-page=\"next\">' + dataTable.options.nextPage + '</a></li>') ;\r\n                }\r\n                if (dataTable.options.lastPage) {\r\n                    $(this).append('<li class=\"' + ((cp === lp || lp === 0) ? 'active' : '') + '\"><a data-page=\"last\">' + dataTable.options.lastPage + '</a></li>') ;\r\n                }\r\n            }) ;\r\n            \r\n            /* Add callback. */\r\n            \r\n            this.getPagingLists().find('a').on('click.datatable', function () {\r\n                if ($(this).parent('li').hasClass('active')) {\r\n                    return ;\r\n                }\r\n                var page = $(this).data('page') ;\r\n                switch (page) {\r\n                case 'first':\r\n                    dataTable.loadPage(1) ;\r\n                    break ;\r\n                case 'prev':\r\n                    dataTable.loadPage(cp - 1) ;\r\n                    break ;\r\n                case 'next':\r\n                    dataTable.loadPage(cp + 1) ;\r\n                    break ;\r\n                case 'last':\r\n                    dataTable.loadPage(lp) ;\r\n                    break ;\r\n                default:\r\n                    dataTable.loadPage(parseInt(page, 10)) ;\r\n                }\r\n            }) ;\r\n        \r\n        },\r\n            \r\n        /**\r\n         * \r\n         * Update the counter divs.\r\n         * \r\n        **/\r\n        updateCounter: function () {\r\n            var cp = this.filterIndex.length ? parseInt(this.currentStart / this.options.pageSize, 10) + 1 : 0 ;\r\n            var lp = parseInt(Math.ceil(this.filterIndex.length / this.options.pageSize), 10);\r\n            var first = this.filterIndex.length ? this.currentStart + 1 : 0 ;\r\n            var last = (this.currentStart + this.options.pageSize) > this.filterIndex.length ? this.filterIndex.length : this.currentStart + this.options.pageSize ;\r\n            this.getCounter().html(this.options.counterText(cp, lp, first, last, this.filterIndex.length)) ;\r\n        },\r\n            \r\n        /** \r\n         * \r\n         * @return The sort function according to options.sort, options.sortKey & options.sortDir.\r\n         * \r\n         * Note: This function could return false if no sort function can be generated.\r\n         * \r\n        **/\r\n        getSortFunction: function () {\r\n            if (this.options.sort === false) {\r\n                return false ;\r\n            }\r\n            if (jQuery.isFunction(this.options.sort)) {\r\n                return this.options.sort ;\r\n            }\r\n            if (this.data.length === 0 || !(this.options.sortKey in this.data[0])) {\r\n                return false ;\r\n            }\r\n            var key = this.options.sortKey ;\r\n            var asc = this.options.sortDir === 'asc';\r\n            return function (a,b) {\r\n                var vala = a[key], valb = b[key] ;\r\n                if (vala > valb) { return asc ?  1 : -1 ; }\r\n                if (vala < valb) { return asc ? -1 :  1 ; }\r\n                return 0 ;\r\n            } ;\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Destroy the filters (remove the filter line).\r\n         * \r\n        **/\r\n        destroyFilter: function () {\r\n              $('.datatable-filter-line').remove() ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Change the text input filter placeholder according to this.options.filterText.\r\n         * \r\n        **/\r\n        changePlaceHolder: function () {\r\n            var placeholder = this.options.filterText ? this.options.filterText : '' ;\r\n            $('.datatable-filter-line input[type=\"text\"]').attr('placeholder', placeholder) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Create a text filter for the specified field.\r\n         * \r\n         * @param field The field corresponding to the filter\r\n         * \r\n         * @update filters Add the new filter to the list of filter (calling addFilter)\r\n         * \r\n         * @return The input filter\r\n         * \r\n        **/\r\n        createTextFilter: function (field) {\r\n            var placeholder = this.options.filterText ? ('placeholder=\"' + this.options.filterText + '\"') : '' ; \r\n            var input = $('<input type=\"text\" class=\"datatable-filter datatable-input-text\" data-filter=\"' + field + '\" ' + placeholder + '/>') ;\r\n            this.filterVals[field] = '' ;\r\n            var typewatch = (function(){\r\n                var timer = 0;\r\n                return function(callback, ms){\r\n                    clearTimeout (timer);\r\n                    timer = setTimeout(callback, ms);\r\n                };\r\n            })();\r\n            input.on('change keyup keydown', (function (datatable) {\r\n                return function () {\r\n                    var val = $(this).val().toUpperCase() ;\r\n                    var field = $(this).data('filter') ;\r\n                    typewatch (function () {\r\n                        datatable.filterVals[field] = val ;\r\n                        datatable.filter () ; \r\n                    }, 300) ;\r\n                };\r\n            }) (this)) ;\r\n            this.addFilter(field, function (data, val) {\r\n                return data.toUpperCase().indexOf(val) !== -1;\r\n            }) ;\r\n            input.addClass(this.options.filterInputClass) ;\r\n            return input ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Create a select filter for the specified field.\r\n         * \r\n         * @param field The field corresponding to the filter\r\n         * \r\n         * @update filters Add the new filter to the list of filter (calling addFilter)\r\n         * \r\n         * @return The select filter.\r\n         * \r\n        **/\r\n        createSelectFilter: function (field) {\r\n            var values = {}, selected = [], multiple = false, empty = true, emptyValue = \"\" ;\r\n            if (this.options.filters[field] === 'select') {\r\n                values = this.getFilterOptions (field) ;\r\n            }\r\n            else {\r\n                multiple = ('multiple' in this.options.filters[field]) && (this.options.filters[field].multiple === true) ;\r\n                empty = ('empty' in this.options.filters[field]) && this.options.filters[field].empty ;\r\n                emptyValue = (('empty' in this.options.filters[field]) && (typeof this.options.filters[field].empty === 'string')) ? this.options.filters[field].empty : '' ;\r\n                if ('values' in this.options.filters[field]) {\r\n                    if (this.options.filters[field].values === 'auto') {\r\n                        values = this.getFilterOptions (field) ;\r\n                    }\r\n                    else {\r\n                        values = this.options.filters[field].values ;\r\n                    }\r\n                    if ('default' in this.options.filters[field]) {\r\n                        selected = this.options.filters[field].default ;\r\n                    }\r\n                    else if (multiple) {\r\n                        selected = [] ;\r\n                        for (var k in values) {\r\n                            if ($.isPlainObject(values[k])) {\r\n                                selected = selected.concat(Object.keys(values[k])) ;\r\n                            }\r\n                            else {\r\n                                selected.push(k) ;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        selected = [] ;\r\n                    }\r\n                    if (!$.isArray(selected)) {\r\n                        selected = [selected] ;\r\n                    }\r\n                }\r\n                else {\r\n                    values = this.options.filters[field] ;\r\n                    selected = multiple ? Object.keys(values) : [] ;\r\n                }\r\n            }\r\n            var select = $('<select ' + (multiple ? 'multiple=\"multiple\"' : '') + ' class=\"datatable-filter datatable-select\" data-filter=\"' + field + '\"></select>') ;\r\n            if (empty) {\r\n                select.append('<option value=\"\">' + emptyValue + '</option>') ;\r\n            }\r\n            var allKeys = [];\r\n            for (var key in values) {\r\n                if ($.isPlainObject(values[key])) {\r\n                    var optgroup = $('<optgroup label=\"' + key + '\"></optgroup>') ;\r\n                    for (var skey in values[key]) {\r\n                        if (values[key].hasOwnProperty(skey)) {\r\n                            allKeys.push(skey) ;\r\n                            optgroup.append('<option value=\"' + skey + '\" ' + \r\n                                ((selected.indexOf(skey) !== -1  || selected.indexOf(parseInt(skey)) !== -1) ? 'selected' : '') + '>' + \r\n                                values[key][skey] + '</option>') ;\r\n                        }\r\n                    }\r\n                    select.append(optgroup) ;\r\n                }\r\n                else {\r\n                    allKeys.push(key) ;\r\n                    select.append('<option value=\"' + key + '\" ' + \r\n                        ((selected.indexOf(key) !== -1  || selected.indexOf(parseInt(key)) !== -1) ? 'selected' : '') + '>' + values[key] + '</option>') ;\r\n                }\r\n            }\r\n            var val = select.val() ;\r\n            this.filterVals[field] = multiple ? val : ((empty && !val) ? allKeys : [val]) ;\r\n            select.change (function (allKeys, multiple, empty, datatable) {\r\n                return function () {\r\n                    var val = $(this).val() ;\r\n                    var field = $(this).data('filter') ;\r\n                    datatable.filterVals[field] = multiple ? val : ((empty && !val) ? allKeys : [val]) ;\r\n                    datatable.filter () ;\r\n                } ;\r\n            } (allKeys, multiple, empty, this)) ;\r\n            this.addFilter(field, function (aKeys) {\r\n                return function (data, val) {\r\n                    if (!val) { return false ; }\r\n                    if (val == aKeys && !data) { return true ; }\r\n                    return val.indexOf(data) !== -1 ;\r\n                } ;\r\n            } (allKeys)) ;\r\n            select.addClass(this.options.filterSelectClass) ;\r\n            return select ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Create the filter line according to options.filters.\r\n         * \r\n        **/\r\n        createFilter: function () {\r\n            this.filters = [] ;\r\n            this.filterVals = [] ;\r\n            if (this.options.filters) {\r\n                var tr = $('<tr class=\"datatable-filter-line\"></tr>').insertAfter(this.table.find('thead tr').last()) ;\r\n                for (var field in this.options.filters) {\r\n                    if (this.options.filters.hasOwnProperty(field)) {\r\n                        var td = $('<td></td>') ;\r\n                        if (this.options.filters[field] !== false) {\r\n                            if (this.options.filters[field] === true) {\r\n                                td.append(this.createTextFilter(field)) ;\r\n                            }\r\n                            else {\r\n                                td.append(this.createSelectFilter(field)) ;\r\n                            }\r\n                        }\r\n                        tr.append(td) ;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n            \r\n        /** \r\n         * \r\n         * Filter data and refresh.\r\n         * \r\n         * @param keepCurrentPage true if the current page should not be changed (on refresh\r\n         *      for example), if not specified or false, the current page will be set to 0.\r\n         * \r\n         * @update filterIndex Will contain the new filtered indexes\r\n         * @update currentStart The new starting point\r\n         * \r\n        **/\r\n        filter: function (keepCurrentPage) {\r\n            if (typeof keepCurrentPage === 'undefined') {\r\n                keepCurrentPage = false ;\r\n            }\r\n            var oldCurrentStart = this.currentStart ;\r\n            this.currentStart = 0 ;\r\n            this.filterIndex = []  ;\r\n            for (var i = 0 ; i < this.data.length ; i++) { \r\n                if (this.checkFilter(this.data[i])) { this.filterIndex.push(i) ; }\r\n            }\r\n            if (keepCurrentPage) {\r\n                this.currentStart = oldCurrentStart ;\r\n                while (this.currentStart >= this.filterIndex.length) {\r\n                    this.currentStart -= this.options.pageSize ;\r\n                }\r\n                if (this.currentStart < 0) {\r\n                    this.currentStart = 0 ;\r\n                }\r\n            }\r\n            this.refresh () ;\r\n        },\r\n            \r\n        /**\r\n         * \r\n         * Check if the specified data match the filters according to this.filters\r\n         * and this.filterVals.\r\n         * \r\n         * @param data The data to check\r\n         * \r\n         * @return true if the data match the filters, false otherwize\r\n         * \r\n        **/\r\n        checkFilter: function (data) {\r\n            var ok = true ;\r\n            for (var fk in this.filters) {\r\n                if (!this.filters[fk](data[fk], this.filterVals[fk])) {\r\n                    if (data['serie'] == 'Absurdomanies') {\r\n                        console.log('absurde = ' + fk + ', ' + data[fk] + ', ' + this.filterVals[fk]) ;\r\n                    }\r\n                    ok = false ;\r\n                    break ;\r\n                }\r\n            }\r\n            return ok ;\r\n        },\r\n            \r\n        /**\r\n         * \r\n         * Add a new filter.\r\n         * \r\n         * @update filters\r\n         * \r\n        **/\r\n        addFilter: function (field, filter) {\r\n            this.filters[field] = filter ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Get the filter select options for a specified field according\r\n         * to this.data.\r\n         * \r\n         * @return The options found.\r\n         * \r\n        **/\r\n        getFilterOptions: function (field) {\r\n            var options = {}, values = [];\r\n            for (var key in this.data) {\r\n                if (this.data[key][field] !== '') {\r\n                    values.push(this.data[key][field]) ;\r\n                }\r\n            }\r\n            values.sort() ;\r\n            for (var i in values) {\r\n                if (values.hasOwnProperty(i)) {\r\n                    options[values[i]] = values[i] ;\r\n                }\r\n            }\r\n            return options ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Remove class, data and event on sort headers.\r\n         * \r\n        **/\r\n        destroySort: function () {\r\n            $('thead th').removeClass('sorting sorting-asc sorting-desc')\r\n                .unbind('click.datatable')\r\n                .removeData('sort') ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Add class, event & data to headers according to this.options.sort or data-sort attribute\r\n         * of headers.\r\n         * \r\n         * @update options.sort Will be set to true if not already and a data-sort attribute is found.\r\n         * \r\n        **/\r\n        createSort: function () {\r\n            var dataTable = this ;\r\n            if (!jQuery.isFunction(this.options.sort)) {\r\n                      \r\n                var countTH = 0 ;\r\n                \r\n                this.table.find('thead th').each (function () {\r\n                \r\n                    if ($(this).data('sort')) {\r\n                        dataTable.options.sort = true ;\r\n                    }\r\n                    else if (dataTable.options.sort === '*') {\r\n                        $(this).data('sort', countTH) ;\r\n                    }\r\n                    else {\r\n                        var key ;\r\n                        if (jQuery.isArray(dataTable.options.sort)) {\r\n                            key = countTH ;\r\n                        }\r\n                        else if (jQuery.isPlainObject(dataTable.options.sort)) {\r\n                            key = Object.keys(dataTable.options.sort)[countTH] ;\r\n                        }\r\n                        if (key !== undefined && dataTable.options.sort[key]) {\r\n                            $(this).data('sort', key) ;\r\n                        }\r\n                    }\r\n                    \r\n                    if ($(this).data('sort') !== undefined) {\r\n                        $(this).addClass('sorting')  ;\r\n                    }\r\n                    \r\n                    countTH ++ ;\r\n                \r\n                }) ;\r\n                \r\n                this.table.find('thead th').on('click.datatable', function () {\r\n                    if ($(this).data('sort') !== undefined) {\r\n                        if ($(this).hasClass('sorting-asc')) {\r\n                            dataTable.options.sortDir = 'desc' ;\r\n                            $(this).removeClass('sorting-asc')\r\n                                .addClass('sorting-desc') ;\r\n                        }\r\n                        else if ($(this).hasClass('sorting-desc')) {\r\n                            dataTable.options.sortDir = 'asc' ;\r\n                            $(this).removeClass('sorting-desc') \r\n                                .addClass('sorting-asc') ;\r\n                        }\r\n                        else {\r\n                            $(this).parent('tr').find('th').removeClass('sorting-desc').removeClass('sorting-asc') ;\r\n                            dataTable.options.sortDir = 'asc' ;\r\n                            dataTable.options.sortKey = $(this).data('sort') ;\r\n                            $(this).addClass('sorting-asc') ;\r\n                        }\r\n                        dataTable.sort () ;\r\n                        dataTable.refresh () ;\r\n                    }\r\n                }) ;\r\n            \r\n            }\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Trigger sort event on the table: If options.sort is a function, \r\n         * sort the table, otherwize trigger click on the column specifid by options.sortKey. \r\n         * \r\n        **/\r\n        triggerSort: function () {\r\n            if (jQuery.isFunction(this.options.sort)) {\r\n                this.sort() ;\r\n                this.refresh () ;\r\n            }\r\n            else if (this.options.sortKey !== false) {\r\n                var th ;\r\n                this.table.find('tr th').removeClass('sorting-desc').removeClass('sorting-asc') ;\r\n                this.table.find('th').each(function (sortKey) {\r\n                    return function () {\r\n                        if ($(this).data('sort') === sortKey) {\r\n                            th = $(this) ;\r\n                        } \r\n                    } ;\r\n                } (this.options.sortKey)) ;\r\n                if (th !== undefined) {\r\n                    th.addClass('sorting-' + this.options.sortDir) ;\r\n                    this.sort() ;\r\n                    this.refresh () ;\r\n                }\r\n            }\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Sort the data (WITHOUT REFRESHING). \r\n         * \r\n         * @update data\r\n         * \r\n        **/\r\n        sort: function () {\r\n            var fnSort = this.getSortFunction () ;\r\n            if (fnSort === false) {\r\n                return ;\r\n            }\r\n            this.data.sort(fnSort) ;\r\n        },\r\n            \r\n        /**\r\n         * \r\n         * Try to identify the specified data with the specify identifier according\r\n         * to this.options.identify.\r\n         * \r\n         * @return true if the data match, false otherwize\r\n         * \r\n        **/\r\n        identify: function (id, data) {\r\n            if (this.options.identify === false) {\r\n                return false ;\r\n            }\r\n            if ($.isFunction(this.options.identify)) {\r\n                return this.options.identify(id, data) ;\r\n            }\r\n            return data[this.options.identify] == id ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Find the index of the first element matching id in the data array.\r\n         * \r\n         * @param The id to find (will be match according to this.options.identify)\r\n         * \r\n         * @return The index of the first element found, or -1 if no element is found\r\n         * \r\n        **/\r\n        indexOf: function (id) {\r\n            var index = -1 ;\r\n            for (var i = 0 ; i < this.data.length && index === -1 ; i++) {\r\n                if (this.identify(id, this.data[i])) {\r\n                    index = i ;\r\n                }\r\n            }\r\n            return index ;\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Get an elements from the data array. \r\n         * \r\n         * @param id An identifier for the element (see this.options.identify)\r\n         * \r\n        **/\r\n        row: function (id) {\r\n            return this.data[this.indexOf(id)];\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Add an element to the data array.\r\n         * \r\n         * @param data The element to add\r\n         * \r\n         * @update data\r\n         * \r\n        **/\r\n        addRow: function (data) {\r\n            this.data.push(data) ; \r\n            this.sort() ;\r\n            this.filter () ;\r\n            this.currentStart = parseInt(this.filterIndex.indexOf(this.data.indexOf(data)) / this.options.pageSize, 10) * this.options.pageSize ;\r\n            this.refresh () ;\r\n        },\r\n            \r\n        /** \r\n         * \r\n         * Remove an element from the data array.\r\n         * \r\n         * @param id An identifier for the element (see this.options.identify)\r\n         * \r\n        **/\r\n        deleteRow: function (id) {\r\n            var oldCurrentStart = this.currentStart ;\r\n            var index = this.indexOf(id) ;\r\n            if (index === -1) {\r\n                console.log('No data found with id: ' + id) ;\r\n                return ;\r\n            }\r\n            this.data.splice(index, 1) ;\r\n            this.filter () ;\r\n            if (oldCurrentStart < this.filterIndex.length) {\r\n                this.currentStart = oldCurrentStart ;\r\n            }\r\n            else {\r\n                this.currentStart = oldCurrentStart - this.options.pageSize ;\r\n                if (this.currentStart < 0) { this.currentStart = 0 ; }\r\n            }\r\n            this.refresh () ;\r\n        },\r\n            \r\n        /** \r\n         * \r\n         * Update an element in the data array. Will add the element if it is not found.\r\n         * \r\n         * @param id An identifier for the element (see this.options.identify)\r\n         * @param data The new data (identifier value will be set to id)\r\n         * \r\n        **/\r\n        updateRow: function (id, data) {\r\n            var index = this.indexOf(id) ;\r\n            if (index !== -1) {\r\n                if (id in data) {\r\n                    delete data[id] ;\r\n                }\r\n                for (var key in this.data[index]) {\r\n                    if (key in data) {\r\n                        this.data[index][key] = data[key] ;\r\n                    }\r\n                }\r\n                this.sort() ;\r\n                this.filter () ;\r\n                this.currentStart = parseInt(this.filterIndex.indexOf(this.indexOf(id)) / this.options.pageSize, 10) * this.options.pageSize ;\r\n                this.refresh () ;\r\n            }\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Change the current page and refresh. \r\n         * \r\n         * @param page The number of the page to load\r\n         * \r\n         * @update currentStart\r\n         * \r\n        **/\r\n        loadPage: function (page) {\r\n            var oldPage = this.currentStart / this.options.pageSize ;\r\n            if (page < 1) {\r\n                page = 1 ;\r\n            }\r\n            else if (page > this.getLastPageNumber()) {\r\n                page = this.getLastPageNumber () ;\r\n            }   \r\n            this.currentStart = (page - 1) * this.options.pageSize  ;\r\n            this.refresh () ;\r\n            this.options.onChange (oldPage + 1, page) ;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * @return The current page\r\n         * \r\n        **/\r\n        getCurrentPage: function () {\r\n            return this.currentStart / this.options.pageSize + 1 ;\r\n        },\r\n            \r\n        /** \r\n         * \r\n         * Refresh the page according to current page (DO NOT SORT).\r\n         * This function call options.lineFormat. \r\n         * \r\n        **/\r\n        refresh: function () {\r\n            this.options.beforeRefresh () ;\r\n            this.updatePaging () ;\r\n            this.updateCounter () ;\r\n            this.getBody().html('') ;\r\n            if (this.currentStart >= this.currentDataLength) {\r\n                this.getBody().append('<tr><td colspan=\"' + this.options.nbColumns + '\"><div class=\"progress progress-striped active\"><div class=\"bar\" style=\"width: 100%;\"></div></div></div></tr>') ;\r\n                return ;\r\n            }\r\n            for (var i=0; i<this.options.pageSize && i+this.currentStart < this.filterIndex.length; i++) {\r\n                this.getBody().append(this.options.lineFormat(this.filterIndex[this.currentStart+i], this.data[this.filterIndex[this.currentStart+i]])) ;\r\n            }\r\n            this.options.afterRefresh () ;\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Set a option and refresh the table if necessary.\r\n         * \r\n         * @param key The name of the option to change\r\n         * @param val The new option value\r\n         * \r\n         * @update options\r\n         * \r\n        **/\r\n        setOption: function (key, val) {\r\n            if (key in this.options) {\r\n                this.options[key] = val ;\r\n                if (key === 'sort') {\r\n                    this.destroySort () ;\r\n                    this.createSort () ;\r\n                    this.triggerSort () ;\r\n                }\r\n                if (key === 'sortKey' || key === 'sortDir') {\r\n                    this.sort() ;\r\n                }\r\n                if (key === 'filters') {\r\n                    this.destroyFilter () ;\r\n                    this.createFilter () ;\r\n                }\r\n                if (key === 'filterText') {\r\n                    this.changePlaceHolder () ;\r\n                }\r\n                this.filter () ;\r\n            }\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Set a list of options and refresh the table if necessary.\r\n         * \r\n         * @param options A list of options to set (plain object)\r\n         * \r\n         * @update options\r\n         * \r\n        **/\r\n        setOptions: function (options) {\r\n            for (var key in options) {\r\n                if (key in this.options) {\r\n                    this.options[key] = options[key] ;\r\n                }\r\n            }\r\n            if ('sort' in options) {\r\n                this.destroySort () ;\r\n                this.createSort () ;\r\n                this.triggerSort () ;\r\n            }\r\n            else if ('sortKey' in options || 'sortDir' in options) {\r\n                this.sort() ;\r\n            }\r\n            if ('filters' in options) {\r\n                this.destroyFilter () ;\r\n                this.createFilter () ;\r\n            }\r\n            if ('filterText' in options) {\r\n                this.changePlaceHolder () ;\r\n            }\r\n            this.filter () ;\r\n        },\r\n        \r\n        /** \r\n         * \r\n         * Remove all the elements added by the datatable. \r\n         * \r\n        **/\r\n        destroy: function () {\r\n            if (this.refreshTimeOut !== undefined) {\r\n                clearTimeout(this.refreshTimeOut) ;\r\n            }\r\n            this.destroySort () ;\r\n            $(this.options.pagingDivSelector)\r\n                .removeClass(\"pagination pagination-centered pagination-data-tables\")\r\n                .html('') ;\r\n            this.destroyFilter () ;\r\n            this.table.removeClass('datatable') ;\r\n            this.getBody().html('') ;\r\n            for (var i=0; i<this.data.length; i++) {\r\n                this.getBody().append(this.options.lineFormat(i, this.data[i])) ;\r\n            }\r\n\r\n        }\r\n    } ;\r\n \r\n    $.fn.datatable = function() {\r\n        var args = arguments ;\r\n        var ret = -1, each ;\r\n        if (args.length === 0) { args = [{}] ; }\r\n        each = this.each(function () {\r\n            if ($.isPlainObject(args[0])) {\r\n                if (this.datatable === undefined) {\r\n                    this.datatable = new DataTable($(this), $.extend({}, $.fn.datatable.defaults, args[0])) ;\r\n                }\r\n                else {\r\n                    this.datatable.setOptions(args[0]) ;\r\n                }\r\n            }\r\n            else if (typeof args[0] === 'string') {\r\n                switch (args[0]) {\r\n                case 'page':\r\n                    if (1 in args) {\r\n                        this.datatable.loadPage(parseInt(args[1])) ;\r\n                    }\r\n                    else {\r\n                        ret = this.datatable.getCurrentPage () ;\r\n                    }\r\n                    break ;\r\n                case 'select':\r\n                    ret = this.datatable.row(args[1]) ;\r\n                    break ;\r\n                case 'insert':\r\n                    this.datatable.addRow(args[1]) ;\r\n                    break ;\r\n                case 'update':\r\n                    this.datatable.updateRow(args[1], args[2]) ;\r\n                    break ;\r\n                case 'delete':\r\n                    this.datatable.deleteRow(args[1]) ;\r\n                    break ;\r\n                case 'option':\r\n                    this.datatable.setOption(args[1], args[2]) ;\r\n                    break ;\r\n                case 'destroy':\r\n                    this.datatable.destroy () ;\r\n                    delete this.datatable ;\r\n                    break ;\r\n                }\r\n            }\r\n        }) ;\r\n        return ret !== -1 ? ret : each ;\r\n    };\r\n    \r\n    $.fn.datatable.defaults = {\r\n        pagingDivSelector: '.paging',\r\n        pagingDivClass: 'pagination pagination-centered',\r\n        pagingListClass: '',\r\n        counterDivSelector: '.counter',\r\n        loadingDivSelector: '.loading',\r\n        sort: false,\r\n        sortKey: false,\r\n        sortDir: 'asc',\r\n        nbColumns: -1,\r\n        pageSize: 20,\r\n        pagingNumberOfPages: 9,\r\n        identify: false,\r\n        onChange: function (oldPage, newPage) { },\r\n        counterText: function (currentPage, totalPage, firstRow, lastRow, totalRow) {\r\n            return 'Page ' + currentPage + ' on ' + totalPage + '. Starting at ' + firstRow + ', ending at ' + lastRow + ' over ' + totalRow + ' entries.' ;\r\n        },\r\n        firstPage: '&lt;&lt;',\r\n        prevPage: '&lt;',\r\n        nextPage: '&gt;',\r\n        lastPage: '&gt;&gt;',\r\n        filters: {},\r\n        filterText: 'Search... ',\r\n        filterInputClass: '',\r\n        filterSelectClass: '',\r\n        beforeRefresh: function () { },\r\n        afterRefresh: function () { },\r\n        lineFormat: function (id, data) { \r\n            var res = $('<tr></tr>') ;\r\n            res.data('id', id) ;\r\n            for (var key in data) { \r\n                if (data.hasOwnProperty(key)) { \r\n                    res.append('<td>' + data[key] + '</td>') ; \r\n                } \r\n            }\r\n            return res ;\r\n        }\r\n    } ;\r\n \r\n} (window.jQuery)); "],"file":"datatable-src.min.js"}